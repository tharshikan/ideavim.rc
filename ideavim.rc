""" ------------------------- DVORAK SETTINGS-------------------------
" Quit insert mode
inoremap hh <Esc>

" wORD left/right
noremap d b|vnoremap d B|onoremap d |
noremap n w|vnoremap n w|onoremap n w|

" Up/down
noremap t k|xnoremap t k|onoremap t k|
noremap h j|xnoremap h j|onoremap h j|

" Move half page faster
nnoremap H  <C-d>
nnoremap T  <C-u>,
nnoremap H :action MoveLineDown<CR>
nnoremap T :action MoveLineUp<CR>

nnoremap <Down> 19j
nnoremap <Up> 19k

nnoremap D  4b
nnoremap N  4w

" cut
noremap e d
noremap E D|xnoremap E D|
"noremap ee dd|

" replace
" noremap r c
noremap = c
noremap + C|xnoremap > C|

"noremap ee dd|
"yank
"noremap , y
"noremap < Y

" inSert/Replace/append (T)
noremap l i
noremap L I

"under
noremap r o
noremap R O

"to
noremap z t
noremap Z T

"delete using j when in visual mode
vnoremap j d
vnoremap k c

"Join and keep it centered
noremap j mzJ'z

"replace single char
noremap c r

"undo
" Redo
nnoremap U <C-r>

"find and keep it centered
noremap w nzzzv
noremap m Nzzzv


noremap . /
noremap > ?

"make Y behave just like C or D
nnoremap Y y$

" inner text objects
" e.g. dip (delete inner paragraph) is now drp
function s:MapTOPart(tostart)
    let char=getchar()
    if type(char)==type(0)
        let char=nr2char(char)
    endif
    return a:tostart.((char is# 'z')?('w'):(char))
endfunction

onoremap ln iw
onoremap lp iw
onoremap an aw
onoremap <expr> i <SID>MapTOPart('i')
onoremap <expr> a <SID>MapTOPart('a')

" Delete/Backspace
nnoremap <C-d> "_dw|vnoremap <C-d> "_d|inoremap <C-d> <Delete>|cnoremap <C-d> <Delete>|
nnoremap <Delete> "_x|vnoremap <Delete> "_d|
nnoremap <Backspace> a<Left><Backspace><Right><Esc>|vnoremap <Backspace> x|
nnoremap <C-Backspace> a<Left><C-W><Right><Esc>|inoremap <C-Backspace> <C-w>|cnoremap <C-Backspace> <C-w>|
nnoremap <C-Delete> "_dw|inoremap <C-Delete> <C-o>"_dw|cnoremap <C-Delete> <Delete>|
nnoremap <S-Backspace> "_d^|inoremap <S-Backspace> <Backspace>|cnoremap <S-Backspace> <Backspace>|
nnoremap <S-Delete> "_d$|inoremap <S-Delete> <Delete>|cnoremap <S-Delete> <Delete>|

""" ------------------------- DVORAK SETTINGS-------------------------




""" Common settings -------------------------
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmode
set number
set autoindent
set smartindent
"set hls
"set relativenumber
set scrolloff=3
"set history=100000
"set clipboard=unnameds
"set selectmode=mouse

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep
set highlightedyank

""" Plugins  --------------------------------
"set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set textobj-entire
set ReplaceWithRegister

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
noremap s :action AceAction<CR>

""" Mappings --------------------------------
nnoremap oo :action Back<CR>
nnoremap oi :action GotoImplementation<CR>
nnoremap ot :action GotoTypeDeclaration<CR>
nnoremap os :action GotoSuperMethod<CR>

nnoremap oc :action GotoClass<CR>
nnoremap od :action GotoDeclaration<CR>
nnoremap of :action GotoFile<CR>
nnoremap os :action GotoSymbol<CR>
nnoremap oh :action Vcs.ShowTabbedFileHistory<CR>

nnoremap ie :action QuickJavaDoc<CR>
nnoremap ii :action GotoDeclaration<CR>
nnoremap it :action QuickTypeDefinition<CR>
"nnoremap id :action QuickImplementations<CR>
nnoremap iu :action ShowUsages<CR>
nnoremap iU :action FindUsages<CR>

nnoremap ip :action ShowPopupMenu<CR>
nnoremap iv :action Vcs.QuickListPopupAction<CR>
nnoremap il :action ActivateProjectToolWindow<CR>
nnoremap it :action ActivateTerminalToolWindow<CR>
nnoremap ih :action HideAllWindows<CR>
nnoremap i[ :action JumpToLastChanged<CR>
nnoremap i] :action HideAllWindows<CR>
"split vertically"
nnoremap ov <C-W>v
"split horizontally"
"nnoremap sh <C-W>h"
"go to right split window"
nnoremap or <C-W>l
nnoremap ol <C-W>h
"increment"
nnoremap o. <C-a>
"decrement"
nnoremap o, <C-x>

"delete/change in word
nnoremap es diw
nnoremap =s ciw

"delete/change in () {} []

nnoremap eh di(
nnoremap et di{
nnoremap ed di[
nnoremap =h ci(
nnoremap =t ci{
nnoremap =d ci[



"delete/change around () {} []

nnoremap eah da(
nnoremap eat da{
nnoremap ead da[
nnoremap =ah ca(
nnoremap =at ca{
nnoremap =ad ca[



"map sl :action Resume<CR>"
"map si :action StepInto<CR>"
"map so :action StepOut<CR>""
"map sk :action StepInto<CR>
"map sh :action StepInto<CR>
"map sp :action EvaluateExpression<CR>"
"map sc :action RunToCursor<CR>

nnoremap ,, :action ToggleLineBreakpoint<CR>
nnoremap ,f :action ChooseDebugConfiguration<CR>
nnoremap ,D :action ChooseDebugConfiguration<CR>
nnoremap ,r :action ChooseRunConfiguration<CR>
nnoremap ,R :action ChooseRunConfiguration<CR>
nnoremap ,j :action EditorCloneCaretBelow<CR>
nnoremap ,k :action EditorCloneCaretAbove<CR>
nnoremap ,R :action ChooseRunConfiguration<CR>
nnoremap ,s :nohlsearch<CR>

map ,c <Action>(Stop)

let mapleader=' '

" Window operation
nnoremap <Leader>ww <C-W>w
nnoremap <Leader>wd <C-W>c
nnoremap <Leader>wj <C-W>j
nnoremap <Leader>wk <C-W>k
nnoremap <Leader>wh <C-W>h
nnoremap <Leader>wl <C-W>l
nnoremap <Leader>ws <C-W>s
nnoremap <Leader>w- <C-W>s
nnoremap <Leader>wv <C-W>v
nnoremap <Leader>w\| <C-W>v

" Tab operation
"nnoremap tp gT

" ==================================================
" Show all the provided actions via `:actionlist`
" ==================================================

" built in search looks better
"nnoremap / :action Find<CR>
" but preserve ideavim search
"nnoremap <Leader>/ /

nnoremap <Leader>;; :action CommentByLineComment<CR>

nnoremap <Leader>bb :action ToggleLineBreakpoint<CR>
nnoremap <Leader>br :action ViewBreakpoints<CR>

nnoremap <Leader>cv :action ChangeView<CR>

nnoremap <Leader>cd :action ChooseDebugConfiguration<CR>


nnoremap <Leader>ga :action GotoAction<CR>
nnoremap <Leader>gc :action GotoClass<CR>

nnoremap <Leader>gd :action GotoDeclaration<CR>
nnoremap <Leader>gf :action GotoFile<CR>
nnoremap <Leader>gi :action GotoImplementation<CR>
nnoremap <Leader>gs :action GotoSymbol<CR>
nnoremap <Leader>gt :action GotoTest<CR>

nnoremap <Leader>fp :action ShowFilePath<CR>

nnoremap <Leader>ic :action InspectCode<CR>

nnoremap <Leader>mv :action ActivateMavenProjectsToolWindow<CR>

nnoremap <Leader>oi :action OptimizeImports<CR>

nnoremap <Leader>pm :action ShowPopupMenu<CR>

nnoremap <Leader>rc :action RunToCursor<CR>
nnoremap <Leader>rC :action ChooseRunConfiguration<CR>
nnoremap <Leader>re :action RenameElement<CR>
nnoremap <Leader>rf :action RenameFile<CR>

nnoremap <Leader>rr :action Rerun<CR>

nnoremap <Leader>se :action SearchEverywhere<CR>
nnoremap <Leader>su :action ShowUsages<CR>
nnoremap <Leader>tc :action CloseActiveTab<CR>
nnoremap <Leader>si :action StepInto<CR>

nnoremap <Leader>tb :action ToggleLineBreakpoint<CR>

nnoremap <Leader>tl Vy<CR>:action ActivateTerminalToolWindow<CR>
vnoremap <Leader>tl y<CR>:action ActivateTerminalToolWindow<CR>

" automatically leave insert mode after 'updatetime' milliseconds of inaction
au CursorHoldI * stopinsert

nnoremap ,, dd^Wjp^Wk
nnoremap ,a getText(res.<Esc>pxbhxywA<Esc>p


